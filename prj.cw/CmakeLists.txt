cmake_minimum_required(VERSION 3.18)  

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True) 

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/bin.dbg)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/bin.rel)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/bin.relwithdbg)

project (test_classification)

find_package(OpenCV REQUIRED)

find_package(nlohmann_json CONFIG REQUIRED)

find_package(PkgConfig)

find_package(Doxygen)

pkg_check_modules(POPPLER_CPP REQUIRED IMPORTED_TARGET poppler-cpp)

# SET(CMAKE_VERBOSE_MAKEFILE True)

add_executable(test_app "example.cpp")

add_executable(accuracy_test "test_acc.cpp")

add_subdirectory("lib")

target_link_libraries(test_app PRIVATE pdf2img classify_blocks)

target_link_libraries(accuracy_test PRIVATE pdf2img classify_blocks nlohmann_json::nlohmann_json)

set(DOXYGEN_RECURSIVE YES)
set(DOXYGEN_EXCLUDE_PATTERNS "*/_deps/*")
set(DOXYGEN_GENERATE_RTF YES)
set(DOXYGEN_OUTPUT_LANGUAGE "Russian")
set(DOXYGEN_GENERATE_HTML YES)
set(DOXYGEN_EXTRACT_PRIVATE YES)
set(DOXYGEN_HIDE_UNDOC_MEMBERS YES)
set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/documentation)


doxygen_add_docs(
  doxygen
  ${PROJECT_SOURCE_DIR}
)

set(DOXYGEN_OUT ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile.doxygen)

add_custom_target(doc_doxygen ALL
  COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_OUT}
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  COMMENT "Generating API documentation with Doxygen"
  VERBATIM )

